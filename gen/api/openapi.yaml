openapi: 3.0.3
info:
  contact:
    email: vadzim.kavalkou@gmail.com
    name: Vadzim Kavalkou
    url: https://www.linkedin.com/in/vadzimkavalkou/
  description: API Specification for A2B Service. Goal of service is to aggregate
    all a2b logic.
  license:
    name: GPL 3.0
  title: A2B Service
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1/
tags:
  - description: A2B Service Open API specification
    name: A2BService
paths:
  /countries:
    get:
      description: Get all countries. Countries are retrieved.
      operationId: countriesRetrieving
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
          description: List of countries
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get all countries in system
      tags:
        - A2B Service
      x-accepts: application/json
  /countries/{id}/cities:
    get:
      description: Get all cities for country. Cities are retrieved.
      operationId: citiesRetrieving
      parameters:
        - description: Id of country
          explode: false
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cities'
          description: Cities details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get all cities for country in system
      tags:
        - A2B Service
      x-accepts: application/json
  /countries/{countryId}/cities/{cityId}/locations:
    get:
      description: Get all cities locations for country. Locations are retrieved.
      operationId: locationsRetrieving
      parameters:
        - description: Id of country
          explode: false
          in: path
          name: countryId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Id of city
          explode: false
          in: path
          name: cityId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
          description: Locations details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get all cities locations for country in system
      tags:
        - A2B Service
      x-accepts: application/json
  /transfers:
    get:
      description: Get all available transfers. Transfers are retrieved.
      operationId: transfersRetrieving
      parameters:
        - description: Id of origin
          explode: true
          in: query
          name: originId
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: Id of destination
          explode: true
          in: query
          name: destinationId
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: Date of transfer
          explode: true
          in: query
          name: date
          required: true
          schema:
            format: date
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
          description: Transfers for selected origin, destination, date
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get all transfers for selected origin, destination, date
      tags:
        - A2B Service
      x-accepts: application/json
  /users/{userId}/transfers:
    get:
      description: Get user's transfers. User's transfers are retrieved.
      operationId: userTransfersRetrieving
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersTransfers'
          description: User's transfers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get user's transfers
      tags:
        - A2B Service
      x-accepts: application/json
  /users/{userId}/transfers{transferId}:
    get:
      description: Get user's transfer. User's transfer is retrieved.
      operationId: userTransferRetrieving
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Id of transfer
          explode: false
          in: path
          name: transferId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfer'
          description: User's transfers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get user's transfer
      tags:
        - A2B Service
      x-accepts: application/json
    post:
      description: Assign the transfer to user
      operationId: assignTransferToUser
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Id of transfer
          explode: false
          in: path
          name: transferId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/TransferAssigning'
        required: true
      responses:
        "201":
          description: Transfer had been assigned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: Challenge not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Assign the transfer to user
      tags:
        - A2B Service
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
    put:
      description: Update user's transfer
      operationId: updateUserTransfer
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Id of transfer
          explode: false
          in: path
          name: transferId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/UserTransferEdition'
        required: true
      responses:
        "204":
          description: User transfer updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: User not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Update user's transfer
      tags:
        - A2B Service
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
  /users/{userId}:
    get:
      description: Get user's profile. User's profile is retrieved.
      operationId: userProfileRetrieving
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: User's profile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Get user's profile
      tags:
        - A2B Service
      x-accepts: application/json
    put:
      description: Update user's profile
      operationId: updateUserProfile
      parameters:
        - description: Id of user
          explode: false
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/UserProfileEdition'
        required: true
      responses:
        "204":
          description: User profile updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: User not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
          description: General application error
      summary: Update user's profile
      tags:
        - A2B Service
      x-contentType: application/json;charset=UTF-8
      x-accepts: application/json
components:
  schemas:
    Countries:
      items:
        properties:
          id:
            example: 1
            format: int64
            type: integer
          name:
            example: Republic of Belarus
            maxLength: 50
            minLength: 1
            type: string
          code:
            example: BY
            maxLength: 10
            minLength: 1
            type: string
        type: object
      type: array
    Cities:
      items:
        properties:
          id:
            example: 1
            format: int64
            type: integer
          countryId:
            example: 2
            format: int64
            type: integer
          name:
            example: Mogilev
            maxLength: 50
            minLength: 1
            type: string
          code:
            example: "22"
            minLength: 1
            type: string
        type: object
      type: array
    Locations:
      items:
        properties:
          cityId:
            example: 1
            format: int64
            type: integer
          point:
            properties:
              latitude:
                exclusiveMaximum: true
                exclusiveMinimum: true
                format: double
                maximum: 90
                minimum: -90
                type: number
              longitude:
                exclusiveMaximum: true
                exclusiveMinimum: true
                format: double
                maximum: 180
                minimum: -180
                type: number
            type: object
        type: object
      type: array
    Transfers:
      items:
        properties:
          id:
            example: 1
            format: int64
            type: integer
          origin:
            example: 2
            format: int64
            type: integer
          destination:
            example: 3
            format: int64
            type: integer
          capacity:
            example: 26
            type: integer
          duration:
            example: '[2022-04-20 02:00:00,2022-05-11 09:00:00]'
            type: string
          price:
            example: 99.9
            format: double
            type: number
          description:
            example: We are not waiting for you. We are angry.
            type: string
        type: object
      type: array
    TransferAssigning:
      example:
        description: I would like to have a cup of coffee.
      properties:
        description:
          example: I would like to have a cup of coffee.
          type: string
      type: object
    UserTransfer:
      example:
        destination: 3
        description: I would like to have a cup of coffee.
        state: COMPLETED
        transferId: 2
        userId: 1
      properties:
        userId:
          example: 1
          format: int64
          type: integer
        transferId:
          example: 2
          format: int64
          type: integer
        destination:
          example: 3
          format: int64
          type: integer
        state:
          enum:
            - COMPLETED
            - CANCELED
            - BOOKED
          type: string
        description:
          example: I would like to have a cup of coffee.
          type: string
      type: object
    UsersTransfers:
      items:
        properties:
          userId:
            example: 1
            format: int64
            type: integer
          transferId:
            example: 2
            format: int64
            type: integer
          destination:
            example: 3
            format: int64
            type: integer
          state:
            enum:
              - COMPLETED
              - CANCELED
              - BOOKED
            type: string
          description:
            example: I would like to have a cup of coffee.
            type: string
        type: object
      type: array
    UserTransferEdition:
      example:
        description: I would like to have a cup of tea.
        state: COMPLETED
      properties:
        state:
          enum:
            - COMPLETED
            - CANCELED
            - BOOKED
          type: string
        description:
          example: I would like to have a cup of tea.
          type: string
      required:
        - description
        - state
      type: object
    UserProfile:
      example:
        firstName: firstName
        lastName: lastName
        phone: phone
        email: email
      properties:
        firstName:
          maxLength: 50
          minLength: 1
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          type: string
        email:
          format: email
          maxLength: 50
          minLength: 1
          type: string
        phone:
          maxLength: 50
          minLength: 1
          type: string
      type: object
    UserProfileEdition:
      example:
        firstName: firstName
        lastName: lastName
      properties:
        firstName:
          maxLength: 50
          minLength: 1
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          type: string
      required:
        - firstName
        - lastName
      type: object
    BadRequestException:
      properties:
        status:
          default: BAD_REQUEST
          example: BAD_REQUEST
          type: string
        code:
          default: 400
          example: 400
          type: integer
        message:
          example: Incorrect request data
          type: string
      required:
        - code
        - message
        - status
      type: object
    NotFoundException:
      properties:
        status:
          default: NOT_FOUND
          example: NOT_FOUND
          type: string
        code:
          default: 404
          example: 404
          type: integer
        message:
          example: Challenge not found
          type: string
      required:
        - code
        - message
        - status
      type: object
    ServerException:
      properties:
        status:
          default: INTERNAL_SERVER_ERROR
          example: INTERNAL_SERVER_ERROR
          type: string
        code:
          default: 500
          example: 500
          type: integer
        message:
          example: Huston we have a problem
          type: string
      required:
        - code
        - message
        - status
      type: object

